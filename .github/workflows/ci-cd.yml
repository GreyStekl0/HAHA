name: CI/CD Pipeline

on:
  push:
    branches: [master]

jobs:
  test:
    name: Тестирование
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
      - name: Run tests
        run: ./gradlew test --no-daemon

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get project version
        id: get-version
        uses: thecodemonkey/action-get-gradle-version@v1

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build and publish Docker image
        run: ./gradlew publishImage --no-daemon

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop haha-app || true
            docker rm haha-app  || true
            docker run \
            -d \
            --name haha-app \
            -p 80:8080 \
            -e API_KEY="${{ secrets.API_KEY }}" \
            -e DNS_SERVER="${{ secrets.DNS_SERVER }}" \
            ghcr.io/greystekl0/haha:${{ needs.build-and-push.outputs.app-version }}
